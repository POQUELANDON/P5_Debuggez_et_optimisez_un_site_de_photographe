!function () {
  let e = function (t, l) { let a = Object.assign({}, e.defaults, l), i = []; for (let o = 0; o < t.length; o++) { e.methods.createRowWrapper(t[o]), a.lightBox && e.methods.createLightBox(t[o], a.lightboxId, a.navigation), e.listeners(a); let s = t[o].querySelectorAll(".gallery-item"); for (let r = 0; r < s.length; r++) { e.methods.responsiveImageItem(s[r]), e.methods.moveItemInRowWrapper(s[r]), e.methods.wrapItemInColumn(s[r], a.columns); let n = s[r].getAttribute("data-gallery-tag"); a.showTags && null !== n && -1 === i.indexOf(n) && i.push(n) } a.showTags && e.methods.showItemTags(t[o], a.tagsPosition, i), t[o].style.display = "block" } }; e.defaults = { columns: 3, lightBox: !0, lightboxId: null, showTags: !0, tagsPosition: "bottom", navigation: !0 }, e.listeners = function (t) { document.addEventListener("click", function (l) { let a = l.target; t.lightBox && "IMG" === a.tagName && a.classList.contains("gallery-item") && e.methods.openLightBox(a, t.lightboxId) }), document.addEventListener("click", function (t) { let l = t.target; l.classList.contains("nav-link") && e.methods.filterByTag.call(l) }), document.addEventListener("click", function (l) { let a = l.target; a.classList.contains("mg-prev") && e.methods.prevImage(t.lightboxId), a.classList.contains("mg-next") && e.methods.nextImage(t.lightboxId) }) }, e.methods = {
    createRowWrapper: function (e) { if (!e.querySelector(".row")) { let t = document.createElement("div"); t.className = "gallery-items-row row", e.appendChild(t) } }, wrapItemInColumn: function (e, t) { let l = "item-column mb-4"; "number" == typeof t ? l += ` col-${Math.ceil(12 / t)}` : "object" == typeof t ? (t.xs && (l += ` col-${Math.ceil(12 / t.xs)}`), t.sm && (l += ` col-sm-${Math.ceil(12 / t.sm)}`), t.md && (l += ` col-md-${Math.ceil(12 / t.md)}`), t.lg && (l += ` col-lg-${Math.ceil(12 / t.lg)}`), t.xl && (l += ` col-xl-${Math.ceil(12 / t.xl)}`)) : console.error(`Columns should be defined as numbers or objects. ${typeof t} is not supported.`); let a = document.createElement("div"); a.className = l, e.parentNode.appendChild(a), a.appendChild(e) }, moveItemInRowWrapper: function (e) { let t = document.querySelector(".gallery-items-row"); t.appendChild(e) }, responsiveImageItem: function (e) { "IMG" === e.tagName && e.classList.add("img-fluid") }, openLightBox: function (e, t) { let l = document.getElementById(t || "galleryLightbox"), a = l.querySelector(".lightboxImage"); if (a.setAttribute("src", e.getAttribute("src")), "undefined" != typeof bootstrap && void 0 !== bootstrap.Modal) { let i = new bootstrap.Modal(l); i.toggle() } }, prevImage: function (e) { let t = document.querySelector(".lightboxImage"); if (t && t.src) { let l = t.src, a = document.querySelectorAll("img.gallery-item"), i = null; for (let o = 0; o < a.length; o++)if (a[o].src === l) { i = a[o]; break } if (i) { let s = document.querySelector(".tags-bar span.active-tag").getAttribute("data-images-toggle"), r = []; if ("all" === s) { let n = document.querySelectorAll(".item-column"); for (let c = 0; c < n.length; c++) { let g = n[c].querySelector("img"); g && r.push(g) } } else { let m = document.querySelectorAll(".item-column"); for (let d = 0; d < m.length; d++) { let u = m[d].querySelector("img"); u && u.getAttribute("data-gallery-tag") === s && r.push(u) } } let h = 0; for (let p = 0; p < r.length; p++)if (i.src === r[p].src) { h = p; break } let f = r[h - 1]; f && (t.src = f.src) } } }, nextImage: function (e) { let t = document.querySelector(".lightboxImage"); if (t && t.src) { let l = t.src, a = document.querySelectorAll("img.gallery-item"), i = null; for (let o = 0; o < a.length; o++)if (a[o].src === l) { i = a[o]; break } if (i) { let s = document.querySelector(".tags-bar span.active-tag").getAttribute("data-images-toggle"), r = []; if ("all" === s) { let n = document.querySelectorAll(".item-column"); for (let c = 0; c < n.length; c++) { let g = n[c].querySelector("img"); g && r.push(g) } } else { let m = document.querySelectorAll(".item-column"); for (let d = 0; d < m.length; d++) { let u = m[d].querySelector("img"); u && u.getAttribute("data-gallery-tag") === s && r.push(u) } } let h = 0; for (let p = 0; p < r.length; p++)if (i.src === r[p].src) { h = p; break } let f = r[h + 1]; f && (t.src = f.src) } } }, createLightBox: function (e, t, l) {
      let a = document.createElement("div"); a.className = "modal fade", a.id = t || "galleryLightbox", a.tabIndex = -1, a.setAttribute("role", "dialog"), a.setAttribute("aria-hidden", "true"), a.innerHTML = `
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-body">
              ${l ? '<div class="mg-prev" style="cursor:pointer;position:absolute;top:50%;left:-15px;background:white;">&lt;</div>' : '<span style="display:none;" />'}
              <img class="lightboxImage img-fluid" alt="Contenu de l'image affich\xe9e dans la modale au clique"/>
              ${l ? '<div class="mg-next" style="cursor:pointer;position:absolute;top:50%;right:-15px;background:white;}">&gt;</div>' : '<span style="display:none;" />'}
            </div>
          </div>
        </div>
      `, e.appendChild(a)
    }, showItemTags: function (e, t, l) {
      let a = '<li class="nav-item"><span class="nav-link active active-tag" data-images-toggle="all">Tous</span></li>'; for (let i = 0; i < l.length; i++)a += `
          <li class="nav-item active">
            <span class="nav-link" data-images-toggle="${l[i]}">${l[i]}</span>
          </li>`; let o = document.createElement("ul"); o.className = "my-4 tags-bar nav nav-pills", o.innerHTML = a, "bottom" === t ? e.appendChild(o) : "top" === t ? e.insertBefore(o, e.firstChild) : console.error(`Unknown tags position: ${t}`)
    }, filterByTag: function () { if (this.classList.contains("active-tag")) return; let e = document.querySelectorAll(".active-tag"); for (let t = 0; t < e.length; t++)e[t].classList.remove("active", "active-tag"); this.classList.add("active-tag"); let l = this.getAttribute("data-images-toggle"), a = document.querySelectorAll(".gallery-item"); for (let i = 0; i < a.length; i++) { let o = a[i].closest(".item-column"); "all" === l || a[i].getAttribute("data-gallery-tag") === l ? o.style.display = "block" : o.style.display = "none" } }
  }, window.mauGallery = e
}();